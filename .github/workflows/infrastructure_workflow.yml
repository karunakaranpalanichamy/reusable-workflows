name: infrastructure branch deployment
on: 
  workflow_call:
    inputs:
      access_key_id: 
        description: AWS_ACCESS_KEY_ID
        required: true
        type: string
      
      secret_access_key: 
        description: AWS_SECRET_ACCESS_KEY
        required: true
        type: string
jobs:
  b_validate:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master' 
    steps:
      - name: Get code 
        uses: actions/checkout@v3
      - name: install terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: terraform init
        run: terraform init
      - name: terraform validate
        run: terraform validate
      - name: terraform plan
        run: terraform plan
   
  b_promote_to_dev:
    runs-on: ubuntu-latest
    needs: b_validate
    if: github.ref != 'refs/heads/master'
    steps:
      - name: promote the dependencies into dev s3
        run: echo 'inside b_promote_to_dev'
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch
      - name: Setup Python Version
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 # Install the python version needed

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip requests

      - name: Execute Python script # Run the run.py to get the latest data
        run: echo "execute run.py"
      - name: printing out the extract branch
        run: echo " context object ---> ${steps.extract_branch.outputs.branch}"
       # if: steps.extract_branch.outputs.branch == 'master'
  b_deploy_to_dev:
    runs-on: ubuntu-latest
    needs: b_validate
    if: github.ref != 'refs/heads/master'
    steps:
      - name: Get code 
        uses: actions/checkout@v3
      - name: install terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: terraform init
        run: terraform init
      - name: terraform validate
        run: terraform validate
      - name: terraform plan
        run: terraform plan
      - name: applying changes
       # run: terraform apply -auto-approve
        run: echo "applyng ****"
        
  m_build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Get code 
        uses: actions/checkout@v3
      - name: install terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ inputs.access_key_id }}
          aws-secret-access-key: ${{ inputs.secret_access_key }}
          aws-region: us-east-1
      - name: terraform init
        run: terraform init
      - name: terraform validate
        run: terraform validate
      - name: terraform plan
        run: terraform plan
  
  m_deploy_to_dev:
    runs-on: ubuntu-latest
    needs: m_build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Get code 
        uses: actions/checkout@v3
      - name: install terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ inputs.access_key_id }}
          aws-secret-access-key: ${{ inputs.secret_access_key }}
          aws-region: us-east-1
      - name: terraform init
        run: terraform init
      - name: terraform validate
        run: terraform validate
      - name: terraform plan
        run: terraform plan
      - name: applying changes
        run: terraform apply -auto-approve
  
